{"ast":null,"code":"var _jsxFileName = \"F:\\\\CODE\\\\LIBRARY\\\\REACTP\\\\react-projects\\\\13-stripe-submenus\\\\setup\\\\src\\\\context.js\";\nimport React, { useState, useContext } from 'react';\nimport sublinks from './data';\nconst AppContext = React.createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openSubmenu = (text, coordinates) => {\n    setIsSubmenuOpen(true);\n  };\n\n  const closeSubmenu = () => {\n    setIsSubmenuOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      isSubmenuOpen,\n      isSidebarOpen,\n      openSubmenu,\n      openSidebar,\n      closeSubmenu,\n      closeSidebar\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }, children);\n};\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};","map":{"version":3,"sources":["F:/CODE/LIBRARY/REACTP/react-projects/13-stripe-submenus/setup/src/context.js"],"names":["React","useState","useContext","sublinks","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isSubmenuOpen","setIsSubmenuOpen","openSidebar","closeSidebar","openSubmenu","text","coordinates","closeSubmenu","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,QAArB;AAIA,MAAMC,UAAU,GAAGJ,KAAK,CAACK,aAAN,EAAnB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAES,aAAF,EAAiBC,gBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACtBH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAIA,QAAMI,YAAY,GAAG,MAAM;AACvBJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAIA,QAAMK,WAAW,GAAG,CAACC,IAAD,EAAMC,WAAN,KAAsB;AACtCL,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAIA,QAAMM,YAAY,GAAG,MAAM;AACvBN,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAOA,sBAAO,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAC/BD,MAAAA,aAD+B;AAChBF,MAAAA,aADgB;AACDM,MAAAA,WADC;AACYF,MAAAA,WADZ;AACyBK,MAAAA,YADzB;AACuCJ,MAAAA;AADvC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGFN,QAHE,CAAP;AAKH,CA5BM;AA+BP,OAAO,MAAMW,gBAAgB,GAAG,MAAM;AAClC,SAAOhB,UAAU,CAACE,UAAD,CAAjB;AACH,CAFM","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport sublinks from './data'\r\n\r\n\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n    const [ isSidebarOpen, setIsSidebarOpen ] = useState(false);\r\n    const [ isSubmenuOpen, setIsSubmenuOpen ] = useState(false);\r\n\r\n    const openSidebar = () => {\r\n        setIsSidebarOpen(true)\r\n    }\r\n\r\n    const closeSidebar = () => {\r\n        setIsSidebarOpen(false)\r\n    }\r\n\r\n    const openSubmenu = (text,coordinates) => {\r\n        setIsSubmenuOpen(true)\r\n    }\r\n\r\n    const closeSubmenu = () => {\r\n        setIsSubmenuOpen(false)\r\n    }\r\n\r\n\r\n\r\n\r\n    return <AppContext.Provider value={{\r\n        isSubmenuOpen, isSidebarOpen, openSubmenu, openSidebar, closeSubmenu, closeSidebar\r\n    }}>\r\n        {children}\r\n    </AppContext.Provider>\r\n}\r\n\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}