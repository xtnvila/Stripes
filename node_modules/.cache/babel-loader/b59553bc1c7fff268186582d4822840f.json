{"ast":null,"code":"var _jsxFileName = \"F:\\\\CODE\\\\LIBRARY\\\\REACTP\\\\react-projects\\\\13-stripe-submenus\\\\setup\\\\src\\\\Submenu.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useGlobalContext } from './context';\n\nconst Submenu = () => {\n  const {\n    isSubmenuOpen,\n    location,\n    page: {\n      page,\n      links\n    }\n  } = useGlobalContext();\n  const container = useRef(null);\n  const [columns, setColumns] = useState('col-2');\n  useEffect(() => {\n    setColumns('col-2');\n    const submenu = container.current;\n    const {\n      center,\n      bottom\n    } = location;\n    submenu.style.left = `${center}px`;\n    submenu.style.top = `${bottom}px`;\n\n    if (links.length === 3) {\n      setColumns('col-3');\n    }\n\n    if (links.length > 3) {\n      setColumns('col-4');\n    }\n  }, [location]);\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    className: `${isSubmenuOpen ? 'submenu show' : 'submenu'}`,\n    ref: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, page), /*#__PURE__*/React.createElement(\"div\", {\n    className: `submenu-center ${columns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, links.map((link, index) => {\n    const {\n      label,\n      icon,\n      url\n    } = link;\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: index,\n      href: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 18\n      }\n    }, icon, label);\n  })));\n};\n\nexport default Submenu;","map":{"version":3,"sources":["F:/CODE/LIBRARY/REACTP/react-projects/13-stripe-submenus/setup/src/Submenu.js"],"names":["React","useState","useRef","useEffect","useGlobalContext","Submenu","isSubmenuOpen","location","page","links","container","columns","setColumns","submenu","current","center","bottom","style","left","top","length","map","link","index","label","icon","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,gBAAT,QAAiC,WAAjC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,IAAI,EAAE;AAAEA,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAjC,MAAqDL,gBAAgB,EAA3E;AACA,QAAMM,SAAS,GAAGR,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,OAAD,CAAtC;AACAE,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,CAAC,OAAD,CAAV;AACA,UAAMC,OAAO,GAAGH,SAAS,CAACI,OAA1B;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqBT,QAA3B;AACAM,IAAAA,OAAO,CAACI,KAAR,CAAcC,IAAd,GAAsB,GAAEH,MAAO,IAA/B;AACAF,IAAAA,OAAO,CAACI,KAAR,CAAcE,GAAd,GAAqB,GAAEH,MAAO,IAA9B;;AACA,QAAIP,KAAK,CAACW,MAAN,KAAiB,CAArB,EAAwB;AACtBR,MAAAA,UAAU,CAAC,OAAD,CAAV;AACD;;AACD,QAAGH,KAAK,CAACW,MAAN,GAAe,CAAlB,EAAqB;AACnBR,MAAAA,UAAU,CAAC,OAAD,CAAV;AACD;AACF,GAZQ,EAYN,CAACL,QAAD,CAZM,CAAT;AAcA,sBACE;AAAO,IAAA,SAAS,EAAG,GAAED,aAAa,GAAG,cAAH,GAAoB,SAAU,EAAhE;AAAmE,IAAA,GAAG,EAAEI,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAL,CADF,eAEE;AAAK,IAAA,SAAS,EAAG,kBAAiBG,OAAQ,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAAuBJ,IAA7B;AACA,wBAAO;AAAG,MAAA,GAAG,EAAEC,KAAR;AAAe,MAAA,IAAI,EAAEG,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BD,IAA3B,EAAiCD,KAAjC,CAAP;AACD,GAHA,CADH,CAFF,CADF;AAWD,CA7BD;;AA+BA,eAAenB,OAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { useGlobalContext } from './context'\r\n\r\nconst Submenu = () => {\r\n  const { isSubmenuOpen, location, page: { page, links } } = useGlobalContext();\r\n  const container = useRef(null)\r\n  const [columns, setColumns] = useState('col-2')\r\n  useEffect(() => {\r\n    setColumns('col-2')\r\n    const submenu = container.current;\r\n    const { center, bottom } = location;\r\n    submenu.style.left = `${center}px`\r\n    submenu.style.top = `${bottom}px`\r\n    if (links.length === 3) {\r\n      setColumns('col-3')\r\n    }\r\n    if(links.length > 3) {\r\n      setColumns('col-4')\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <aside className={`${isSubmenuOpen ? 'submenu show' : 'submenu'}`} ref={container}>\r\n      <h4>{page}</h4>\r\n      <div className={`submenu-center ${columns}`}>\r\n        {links.map((link, index) => {\r\n          const { label, icon, url } = link\r\n          return <a key={index} href={url}>{icon}{label}</a>\r\n        })}\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default Submenu\r\n"]},"metadata":{},"sourceType":"module"}